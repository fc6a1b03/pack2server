name: Release CLI

on:
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      tag:   ${{ steps.tag.outputs.tag }}
    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'
      - name: Setup Gradle & Compile
        uses: gradle/actions/setup-gradle@v3
        with:
          build-cache-push: false
          build-cache-enabled: false
          arguments:  clean build nativeCompile --no-daemon -Porg.gradle.daemon=false -Porg.gradle.caching=false -Porg.gradle.parallel=false -Porg.gradle.workers.max=4 -Porg.gradle.jvmargs=-Xms1g -Xmx4g -XX:MaxMetaspaceSize=1g

      - name: Get version
        id: get-version
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: printVersion -q
      - run: echo "version=${{ steps.get-version.outputs.result }}" >> "$GITHUB_OUTPUT"
        shell: bash
      - name: Ensure tag
        id: tag
        shell: bash
        run: |
          TAG="v${{ steps.get-version.outputs.version }}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          if git rev-parse "$TAG" &>/dev/null; then
            echo "Tag exists, skip creation"
          else
            git config user.email "github-actions@github.com"
            git config user.name "GitHub Actions"
            git tag -a "$TAG" -m "Release $TAG"
            git push origin "$TAG"
          fi
      - name: Release Linux assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/native/nativeCompile/pack2server
            build/libs/*-cli.jar
          generate_release_notes: true
          tag_name: ${{ steps.tag.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          overwrite_files: true

  windows:
    needs: linux
    runs-on: windows-latest
    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'gradle'
      - name: Setup Gradle & Compile
        uses: gradle/actions/setup-gradle@v3
        with:
          build-cache-push: false
          build-cache-enabled: false
          arguments: clean build nativeCompile --no-daemon -Porg.gradle.daemon=false -Porg.gradle.caching=false -Porg.gradle.parallel=false -Porg.gradle.workers.max=4 -Porg.gradle.jvmargs=-Xms1g -Xmx4g -XX:MaxMetaspaceSize=1g

      - name: Rename exe
        shell: bash
        run: mv build/native/nativeCompile/pack2server.exe \
               build/native/nativeCompile/pack2server-windows.exe
      - name: Release Windows assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/native/nativeCompile/pack2server-windows.exe
            build/libs/*-cli.jar
          generate_release_notes: false
          tag_name: ${{ needs.linux.outputs.tag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          overwrite_files: true
