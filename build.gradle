plugins {
    id "java"
    id "com.gradleup.shadow" version "9.2.1"
}

group = "cloud.dbug.pack2server"
version = "0.11.2"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(25)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    hutoolVersion = "5.8.40"
    picocliVersion = "4.7.7"
    jsonpathVersion = "2.9.0"
    lombokCAVersion = "0.2.0"
    lombokVersion = "1.18.42"
    compressVersion = "1.28.0"
    junitJupiterVersion = "5.13.4"
}

dependencies {
    // ========== bom ==========
    implementation platform("cn.hutool:hutool-bom:${hutoolVersion}")
    // ========== hutool ==========
    implementation "cn.hutool:hutool-core"
    implementation "cn.hutool:hutool-http"
    implementation "cn.hutool:hutool-json"
    implementation "cn.hutool:hutool-extra"
    implementation "cn.hutool:hutool-system"
    implementation "com.jayway.jsonpath:json-path:${jsonpathVersion}"
    implementation "org.apache.commons:commons-compress:${compressVersion}"
    // ========== picocli ==========
    implementation "info.picocli:picocli:${picocliVersion}"
    // ========== lombok ==========
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokCAVersion}"
    // ========== junit jupiter ==========
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

shadowJar {
    archiveVersion = ""
    archiveClassifier = "cli"
    archiveBaseName = "pack2server"
    manifest {
        attributes(
                "Main-Class": "${project.group}.Pack2server",
                "Implementation-Version": project.version
        )
    }
    mergeServiceFiles()
}

test {
    useJUnitPlatform {
        excludeTags "local"
    }
    failOnNoDiscoveredTests = Boolean.FALSE
    systemProperties = [
            "junit.jupiter.execution.parallel.enabled"                 : Boolean.TRUE,
            "junit.jupiter.execution.parallel.mode.default"            : "concurrent",
            "junit.jupiter.execution.parallel.config.strategy"         : "fixed",
            "junit.jupiter.execution.parallel.config.fixed.parallelism": 4
    ]
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.compilerArgs += ["-Xlint:deprecation", "-Xlint:unchecked"]
}

tasks.register("printVersion") {
    doLast {
        println project.version
    }
}

tasks.register("printJavaVersion") {
    doLast {
        println JavaVersion.current()
    }
}

tasks.register("printGradleVersion") {
    doLast {
        println gradle.gradleVersion
    }
}

tasks.register("printAllVersions") {
    doLast {
        println "Project Version: ${project.version}"
        println "Java Version: ${java.sourceCompatibility}"
        println "Gradle Version: ${gradle.gradleVersion}"
    }
}